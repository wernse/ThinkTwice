package com.example.myfirstapp;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import android.util.Log;

public class HandlingXML extends DefaultHandler implements Serializable{
	private static final String TAG = "MyActivity";
	boolean id =false;
	boolean name=false;
	boolean type=false;
	boolean description = false;
	boolean first = true;
    static final String KEY_ITEM = "item"; // parent node
    static final String KEY_ID = "id";
    static final String KEY_NAME = "name";
    static final String KEY_COST = "type";
    static final String KEY_DESC = "description";
    ArrayList<HashMap<String, String>> menuItems = new ArrayList<HashMap<String, String>>();
	ArrayList<XMLDataCollected> infoList = new ArrayList<XMLDataCollected>();//data is set into this
    XMLDataCollected info = new XMLDataCollected();//data is set into this
    HashMap<String, String> map = new HashMap<String, String>();
    /*
    for (int i = 0; i < nl.getLength(); i++) {
        // creating new HashMap
        HashMap<String, String> map = new HashMap<String, String>();
        Element e = (Element) nl.item(i);
        // adding each child node to HashMap key => value
        map.put(KEY_ID, parser.getValue(e, KEY_ID));
        map.put(KEY_NAME, parser.getValue(e, KEY_NAME));
        map.put(KEY_COST, "Rs." + parser.getValue(e, KEY_COST));
        map.put(KEY_DESC, parser.getValue(e, KEY_DESC));

        // adding HashList to ArrayList
        menuItems.add(map);
    }
    */
    public ArrayList<XMLDataCollected> getInformation(){//what info is returned.
    	Log.v(TAG, "AAAAA"+ infoList.size());
    	Log.v(TAG, "map"+ menuItems.size());
    	return infoList;
    }
    
	@Override
	public void startElement(String uri, String localName, String qName,  //localName = name of node
			Attributes attributes) throws SAXException {//attributes is the attribute value e.g. city data="1"
		
		
		// TODO Auto-generated method stub
		if(localName.equals("food") && first == false){
			
			infoList.add(info);
			info = new XMLDataCollected();
			menuItems.add(map);
			map = new HashMap<String, String>();
			Log.v(TAG, "ADD " + menuItems.size());
		}
		
		if(localName.equals("food_id")){
			id = true;
			first =false;
			Log.v(TAG, "food_id " );
		}			
		
		if(localName.equals("food_name")){
			name = true;
			Log.v(TAG, "food_name " );
		}
		
		if(localName.equals("food_type")){
			type = true;
			Log.v(TAG, "food_type " );
		}
		
		if(localName.equals("food_description")){
			description = true;
			Log.v(TAG, "food_description " );
		}
		


	 


			
	}

	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {
		// TODO Auto-generated method stub
		
		if (id) {
			String value = new String(ch, start, length);
			int idValue = Integer.parseInt(value);
			info.setId(idValue);
			map.put(KEY_ID, value);
			Log.v(TAG, "id"+info.getId() );
			id = false;
		}
 
		if (name) {
			String value = new String(ch, start, length);
			info.setName(value);
			map.put(KEY_NAME, value);
			Log.v(TAG, "name"+info.getName() );
			name = false;
		}
 
		if (type) {
			String value = new String(ch, start, length);
			info.setType(value);
			map.put(KEY_COST, value);
			Log.v(TAG, "type"+info.getType() );
			type = false;
		}
 
		if (description) {
			String value = new String(ch, start, length);
			info.setDescription(value);
			map.put(KEY_DESC, value);
			Log.v(TAG, "description"+info.getDescription() );
			description = false;

		}
 
	}

	
	
}
